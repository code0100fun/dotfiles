#!/usr/bin/env bash

set -e

sudo apt-get update
sudo apt-get -y install git tmux vim \
    autoconf build-essential unzip lsb-core

# Erlang dependencies
sudo apt-get -y install \
    m4 \
    libncurses5-dev \
    libwxgtk3.0-dev libgl1-mesa-dev libglu1-mesa-dev libpng-dev \
    libssh-dev \
    unixodbc-dev \
    xsltproc fop

CONFIG="install.conf.yaml"
DOTBOT_DIR="dotbot"

DOTBOT_BIN="bin/dotbot"
BASEDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

ASDF_VERSION="v0.6.3"
DOCKER_COMPOSE_VERSION="1.23.2"

cd "${BASEDIR}"

if [ ! -f ~/.ssh/id_rsa.pub ]; then
    read -p "No public key found. Would you like to generate one? " -n 1 -r
    echo

    if [[ $REPLY =~ ^[Yy]$ ]]
    then
        read -p "email:" -r
        echo
        echo 'Generating new SSH Keys'
        cat /dev/zero | ssh-keygen -q -N "" -t rsa -b 4096 -C $REPLY

        echo
        echo '=== BEGIN Public Key ==='
        cat ~/.ssh/id_rsa.pub
        echo '=== END Public Key ==='

        echo -n "Add the key above to your GitHub SSH Keys and press [ENTER]: "
        read _

        echo 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==' >> ~/.ssh/known_hosts
    fi
fi

if [ ! -d ~/.asdf ] ; then
    git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch $ASDF_VERSION
    ~/.asdf/bin/asdf plugin-add erlang https://github.com/asdf-vm/asdf-erlang.git | tee
    ~/.asdf/bin/asdf plugin-add elixir https://github.com/asdf-vm/asdf-elixir.git | tee
fi


if [ ! -d ~/.tmux/plugins/tpm ] ; then
    git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
fi

if [ ! -d ~/.vim/bundle/neobundle.vim ] ; then
    curl https://raw.githubusercontent.com/Shougo/neobundle.vim/master/bin/install.sh > neobundle_install.sh
    sh ./neobundle_install.sh
fi

git -C "${DOTBOT_DIR}" submodule sync --quiet --recursive
git submodule update --init --recursive "${DOTBOT_DIR}"

"${BASEDIR}/${DOTBOT_DIR}/${DOTBOT_BIN}" -d "${BASEDIR}" -c "${CONFIG}" "${@}"

. ~/.bashrc

# --------------- Docker + Compose
if ! command -v docker >/dev/null ; then
    # https://gist.github.com/dweldon/39ca0536168a92815a56df44eb55a337

    # https://docs.docker.com/install/linux/docker-ce/ubuntu/
    echo "Installing docker..."
    sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    sudo apt-get update
    sudo apt-get install -y docker-ce
    echo "Finished installing docker."
fi

if ! command -v docker-compose >/dev/null ; then
    # https://docs.docker.com/compose/install/
    echo "Installing docker-compose..."
    sudo curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
    echo "Finished installing docker-compose."
fi

# https://docs.docker.com/install/linux/linux-postinstall/
if ! grep --quiet docker /etc/group ; then
    sudo groupadd docker
fi

if ! id -Gn $USER | grep --quiet '\bdocker\b' ; then
    sudo usermod -a -G docker $USER
    echo "Logout and re-login to finish adding user to docker group."
fi
# ---------------
